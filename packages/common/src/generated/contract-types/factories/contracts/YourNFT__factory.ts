/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YourNFT, YourNFTInterface } from "../../contracts/YourNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526007815266165bdd5c93919560ca1b6020808301918252835180850190945260048452631653919560e21b9084015281519192916200005d91600091620000ec565b50805162000073906001906020840190620000ec565b505050620000906200008a6200009660201b60201c565b6200009a565b620001cf565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fa9062000192565b90600052602060002090601f0160209004810192826200011e576000855562000169565b82601f106200013957805160ff191683800117855562000169565b8280016001018555821562000169579182015b82811115620001695782518255916020019190600101906200014c565b50620001779291506200017b565b5090565b5b808211156200017757600081556001016200017c565b600181811c90821680620001a757607f821691505b60208210811415620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b611b8480620001df6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb4651461026a578063b88d4fde1461027d578063c87b56dd14610290578063e985e9c5146102a3578063f2fde38b146102df57600080fd5b80636352211e1461022357806370a0823114610236578063715018a6146102495780638da5cb5b1461025157806395d89b411461026257600080fd5b806318160ddd116100f457806318160ddd146101cf57806323b872dd146101d75780632f745c59146101ea57806342842e0e146101fd5780634f6ccce71461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b314610199578063110bcd45146101ae575b600080fd5b61014461013f36600461160a565b6102f2565b60405190151581526020015b60405180910390f35b610161610303565b604051610150919061167f565b61018161017c366004611692565b610395565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046116c7565b6103bc565b005b6101c16101bc36600461177d565b6104d7565b604051908152602001610150565b6008546101c1565b6101ac6101e53660046117df565b61050f565b6101c16101f83660046116c7565b610540565b6101ac61020b3660046117df565b6105d6565b6101c161021e366004611692565b6105f1565b610181610231366004611692565b610684565b6101c161024436600461181b565b6106e4565b6101ac61076a565b600b546001600160a01b0316610181565b61016161077e565b6101ac610278366004611836565b61078d565b6101ac61028b366004611872565b61079c565b61016161029e366004611692565b6107d4565b6101446102b13660046118ee565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102ed36600461181b565b6107df565b60006102fd82610858565b92915050565b60606000805461031290611921565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611921565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050905090565b60006103a08261087d565b506000908152600460205260409020546001600160a01b031690565b60006103c782610684565b9050806001600160a01b0316836001600160a01b0316141561043a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610456575061045681336102b1565b6104c85760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610431565b6104d283836108dc565b505050565b60006104e7600c80546001019055565b60006104f2600c5490565b90506104fe848261094a565b6105088184610a98565b9392505050565b6105193382610b32565b6105355760405162461bcd60e51b81526004016104319061195c565b6104d2838383610bb1565b600061054b836106e4565b82106105ad5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610431565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104d28383836040518060200160405280600081525061079c565b60006105fc60085490565b821061065f5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610431565b60088281548110610672576106726119aa565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102fd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610431565b60006001600160a01b03821661074e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610431565b506001600160a01b031660009081526003602052604090205490565b610772610d58565b61077c6000610db2565b565b60606001805461031290611921565b610798338383610e04565b5050565b6107a63383610b32565b6107c25760405162461bcd60e51b81526004016104319061195c565b6107ce84848484610ed3565b50505050565b60606102fd82610f06565b6107e7610d58565b6001600160a01b03811661084c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610431565b61085581610db2565b50565b60006001600160e01b0319821663780e9d6360e01b14806102fd57506102fd8261102c565b6000818152600260205260409020546001600160a01b03166108555760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610431565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061091182610684565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166109a05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610431565b6000818152600260205260409020546001600160a01b031615610a055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610431565b610a116000838361107c565b6001600160a01b0382166000908152600360205260408120805460019290610a3a9084906119d6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610b135760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610431565b6000828152600a6020908152604090912082516104d29284019061155b565b600080610b3e83610684565b9050806001600160a01b0316846001600160a01b03161480610b8557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ba95750836001600160a01b0316610b9e84610395565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bc482610684565b6001600160a01b031614610c285760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610431565b6001600160a01b038216610c8a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610431565b610c9583838361107c565b610ca06000826108dc565b6001600160a01b0383166000908152600360205260408120805460019290610cc99084906119ee565b90915550506001600160a01b0382166000908152600360205260408120805460019290610cf79084906119d6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b0316331461077c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610431565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e665760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610431565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ede848484610bb1565b610eea84848484611087565b6107ce5760405162461bcd60e51b815260040161043190611a05565b6060610f118261087d565b6000828152600a602052604081208054610f2a90611921565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5690611921565b8015610fa35780601f10610f7857610100808354040283529160200191610fa3565b820191906000526020600020905b815481529060010190602001808311610f8657829003601f168201915b505050505090506000610fde60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b9050805160001415610ff1575092915050565b81511561102357808260405160200161100b929190611a57565b60405160208183030381529060405292505050919050565b610ba984611185565b60006001600160e01b031982166380ac58cd60e01b148061105d57506001600160e01b03198216635b5e139f60e01b145b806102fd57506301ffc9a760e01b6001600160e01b03198316146102fd565b6104d2838383611215565b60006001600160a01b0384163b1561117a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110cb903390899088908890600401611a86565b6020604051808303816000875af1925050508015611106575060408051601f3d908101601f1916820190925261110391810190611ac2565b60015b611160573d808015611134576040519150601f19603f3d011682016040523d82523d6000602084013e611139565b606091505b5080516111585760405162461bcd60e51b815260040161043190611a05565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ba9565b506001949350505050565b60606111908261087d565b60006111c460408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905060008151116111e45760405180602001604052806000815250610508565b806111ee846112cd565b6040516020016111ff929190611a57565b6040516020818303038152906040529392505050565b6001600160a01b0383166112705761126b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611293565b816001600160a01b0316836001600160a01b0316146112935761129383826113cb565b6001600160a01b0382166112aa576104d281611468565b826001600160a01b0316826001600160a01b0316146104d2576104d28282611517565b6060816112f15750506040805180820190915260018152600360fc1b602082015290565b8160005b811561131b578061130581611adf565b91506113149050600a83611b10565b91506112f5565b60008167ffffffffffffffff811115611336576113366116f1565b6040519080825280601f01601f191660200182016040528015611360576020820181803683370190505b5090505b8415610ba9576113756001836119ee565b9150611382600a86611b24565b61138d9060306119d6565b60f81b8183815181106113a2576113a26119aa565b60200101906001600160f81b031916908160001a9053506113c4600a86611b10565b9450611364565b600060016113d8846106e4565b6113e291906119ee565b600083815260076020526040902054909150808214611435576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061147a906001906119ee565b600083815260096020526040812054600880549394509092849081106114a2576114a26119aa565b9060005260206000200154905080600883815481106114c3576114c36119aa565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806114fb576114fb611b38565b6001900381819060005260206000200160009055905550505050565b6000611522836106e4565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461156790611921565b90600052602060002090601f01602090048101928261158957600085556115cf565b82601f106115a257805160ff19168380011785556115cf565b828001600101855582156115cf579182015b828111156115cf5782518255916020019190600101906115b4565b506115db9291506115df565b5090565b5b808211156115db57600081556001016115e0565b6001600160e01b03198116811461085557600080fd5b60006020828403121561161c57600080fd5b8135610508816115f4565b60005b8381101561164257818101518382015260200161162a565b838111156107ce5750506000910152565b6000815180845261166b816020860160208601611627565b601f01601f19169290920160200192915050565b6020815260006105086020830184611653565b6000602082840312156116a457600080fd5b5035919050565b80356001600160a01b03811681146116c257600080fd5b919050565b600080604083850312156116da57600080fd5b6116e3836116ab565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611722576117226116f1565b604051601f8501601f19908116603f0116810190828211818310171561174a5761174a6116f1565b8160405280935085815286868601111561176357600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561179057600080fd5b611799836116ab565b9150602083013567ffffffffffffffff8111156117b557600080fd5b8301601f810185136117c657600080fd5b6117d585823560208401611707565b9150509250929050565b6000806000606084860312156117f457600080fd5b6117fd846116ab565b925061180b602085016116ab565b9150604084013590509250925092565b60006020828403121561182d57600080fd5b610508826116ab565b6000806040838503121561184957600080fd5b611852836116ab565b91506020830135801515811461186757600080fd5b809150509250929050565b6000806000806080858703121561188857600080fd5b611891856116ab565b935061189f602086016116ab565b925060408501359150606085013567ffffffffffffffff8111156118c257600080fd5b8501601f810187136118d357600080fd5b6118e287823560208401611707565b91505092959194509250565b6000806040838503121561190157600080fd5b61190a836116ab565b9150611918602084016116ab565b90509250929050565b600181811c9082168061193557607f821691505b6020821081141561195657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156119e9576119e96119c0565b500190565b600082821015611a0057611a006119c0565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611a69818460208801611627565b835190830190611a7d818360208801611627565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611ab86080830184611653565b9695505050505050565b600060208284031215611ad457600080fd5b8151610508816115f4565b6000600019821415611af357611af36119c0565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b1f57611b1f611afa565b500490565b600082611b3357611b33611afa565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ab92a9e4fe52014d97285639fc9e80dddbb3c11eadb81337c6f8d5cde83bd82864736f6c634300080a0033";

type YourNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourNFT__factory extends ContractFactory {
  constructor(...args: YourNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourNFT";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YourNFT> {
    return super.deploy(overrides || {}) as Promise<YourNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YourNFT {
    return super.attach(address) as YourNFT;
  }
  override connect(signer: Signer): YourNFT__factory {
    return super.connect(signer) as YourNFT__factory;
  }
  static readonly contractName: "YourNFT";

  public readonly contractName: "YourNFT";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourNFTInterface {
    return new utils.Interface(_abi) as YourNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourNFT {
    return new Contract(address, _abi, signerOrProvider) as YourNFT;
  }
}
